services:

  mysql:
    image: appkr/mysql:8.0-arm64
    container_name: mysql
    volumes:
      - $HOME/mysql_data8:/var/lib/mysql/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysqld.cnf:/tmp/mysqld.cnf
    environment:
      - MYSQL_ROOT_PASSWORD=secret
    ports:
      - 3306:3306
    command: mysqld --defaults-extra-file=/tmp/mysqld.cnf
    healthcheck:
      test: mysql -uroot -psecret -e 'SELECT 1' 2>/dev/null || exit 1

  zookeeper:
    image: confluentinc/cp-zookeeper
    platform: linux/arm64
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    healthcheck:
      test: nc -z localhost 2181 || exit 1

  kafka:
    image: confluentinc/cp-kafka
    platform: linux/arm64
    container_name: kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    healthcheck:
      test: nc -z localhost 9092 || exit 1

  connect:
    image: quay.io/debezium/connect:2.2
    platform: linux/arm64
    container_name: connect
    environment:
      BOOTSTRAP_SERVERS: 'kafka:9092'
      GROUP_ID: '1'
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
    ports:
      - 8083:8083
    depends_on:
      - kafka
      - mysql
    healthcheck:
      test: curl -H 'Accept:application/json' http://localhost:8083/connectors/ || exit 1
